{"ast":null,"code":"import handleResponse from './HandleResponse';\nimport { postOptions } from './HeaderHelper';\nimport settings from \"../settings.json\";\nconst apiBaseUrl = settings.apiBaseUrl;\nexport const LoginService = {\n  getLogin,\n  saveUser\n};\nexport class User {\n  constructor() {\n    this.username = \"\";\n    this.password = \"\";\n  }\n\n}\n\nasync function getLogin(username, password) {\n  const userHeader = postOptions({\n    username: username,\n    password: password\n  });\n  const apiUrl = `${apiBaseUrl}/v1/Login`;\n  return await fetch(apiUrl, userHeader).then(response => handleResponse(response));\n}\n\nasync function saveUser(username, password) {\n  const apiUrl = `${apiBaseUrl}/v1/create`;\n  const userHeader = postOptions({\n    userName: username,\n    password: password\n  });\n  return await fetch(apiUrl, userHeader).then(response => handleResponse(response));\n}","map":{"version":3,"names":["handleResponse","postOptions","settings","apiBaseUrl","LoginService","getLogin","saveUser","User","username","password","userHeader","apiUrl","fetch","then","response","userName"],"sources":["G:/Projetos/LojasIntegrada/src/frontend/src/Services/LoginServices.tsx"],"sourcesContent":["import handleResponse from './HandleResponse';\r\nimport { postOptions } from './HeaderHelper'\r\nimport settings from \"../settings.json\";\r\n\r\nconst apiBaseUrl: string = settings.apiBaseUrl;\r\n\r\n\r\nexport const LoginService = {\r\n    getLogin,\r\n    saveUser\r\n};\r\nexport class User {\r\n    username: string = \"\";\r\n    password: string = \"\";\r\n}\r\n\r\nasync function getLogin(username: string, password: string): Promise<any> {\r\n    const userHeader = postOptions({ username: username, password: password });\r\n\r\n    const apiUrl = `${apiBaseUrl}/v1/Login`;\r\n    return await fetch(apiUrl, userHeader)\r\n        .then((response: Response) =>\r\n            handleResponse<any>(response)\r\n        );\r\n}\r\nasync function saveUser(username: string, password: string): Promise<any> {\r\n    const apiUrl = `${apiBaseUrl}/v1/create`;\r\n    const userHeader = postOptions({ userName: username, password: password });\r\n    return await fetch(apiUrl, userHeader)\r\n        .then((response: Response) =>\r\n            handleResponse<any>(response)\r\n        );\r\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,UAAkB,GAAGD,QAAQ,CAACC,UAApC;AAGA,OAAO,MAAMC,YAAY,GAAG;EACxBC,QADwB;EAExBC;AAFwB,CAArB;AAIP,OAAO,MAAMC,IAAN,CAAW;EAAA;IAAA,KACdC,QADc,GACK,EADL;IAAA,KAEdC,QAFc,GAEK,EAFL;EAAA;;AAAA;;AAKlB,eAAeJ,QAAf,CAAwBG,QAAxB,EAA0CC,QAA1C,EAA0E;EACtE,MAAMC,UAAU,GAAGT,WAAW,CAAC;IAAEO,QAAQ,EAAEA,QAAZ;IAAsBC,QAAQ,EAAEA;EAAhC,CAAD,CAA9B;EAEA,MAAME,MAAM,GAAI,GAAER,UAAW,WAA7B;EACA,OAAO,MAAMS,KAAK,CAACD,MAAD,EAASD,UAAT,CAAL,CACRG,IADQ,CACFC,QAAD,IACFd,cAAc,CAAMc,QAAN,CAFT,CAAb;AAIH;;AACD,eAAeR,QAAf,CAAwBE,QAAxB,EAA0CC,QAA1C,EAA0E;EACtE,MAAME,MAAM,GAAI,GAAER,UAAW,YAA7B;EACA,MAAMO,UAAU,GAAGT,WAAW,CAAC;IAAEc,QAAQ,EAAEP,QAAZ;IAAsBC,QAAQ,EAAEA;EAAhC,CAAD,CAA9B;EACA,OAAO,MAAMG,KAAK,CAACD,MAAD,EAASD,UAAT,CAAL,CACRG,IADQ,CACFC,QAAD,IACFd,cAAc,CAAMc,QAAN,CAFT,CAAb;AAIH"},"metadata":{},"sourceType":"module"}